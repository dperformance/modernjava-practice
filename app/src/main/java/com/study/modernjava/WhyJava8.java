/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.study.modernjava;

import java.util.Arrays;
import java.util.List;

import static java.util.stream.Collectors.joining;

public class WhyJava8 {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new WhyJava8().getGreeting());

        // Before
        // 1. Integer Array
        final List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

        // 2. " : " add
        StringBuilder stringBuilder = new StringBuilder();
        for (Integer number : numbers) {
            stringBuilder.append(number).append(" : ");
        }
        System.out.println(stringBuilder); // 1 : 2 : 3 : 4 : 5 : 6 : 7 : 8 : 9 : 10 :

        // 10뒤에 " : "가 붙지 않도록 처리를 또 해줘야 함..

        // 방법 1
        stringBuilder.setLength(0);
        int size = numbers.size(); // for 문에 numbers.size()를 사용하면 매번 .size() method 를 호출해야하는 비효율적이기 때문에 변수로 잡는다.
        for (int i = 0; i < size; i++) {
            if (i == size -1) {
                stringBuilder.append(numbers.get(i));
                continue;
            }
            stringBuilder.append(numbers.get(i)).append(" : ");
        }
        System.out.println(stringBuilder); // 1 : 2 : 3 : 4 : 5 : 6 : 7 : 8 : 9 : 10

        // 방법 2
        stringBuilder.setLength(0);
        for (Integer number : numbers) {
            stringBuilder.append(number).append(" : "); // 이부분이 바뀔때마다 length 수정을 또 해줘야한다..
        }
        if (stringBuilder.length() > 0) {
            stringBuilder.delete(stringBuilder.length() -3, stringBuilder.length());
        }
        System.out.println(stringBuilder); // 1 : 2 : 3 : 4 : 5 : 6 : 7 : 8 : 9 : 10

        // 방법 3 (점점 복잡해진다)
        stringBuilder.setLength(0);
        final String separator = " : - ";
        for (Integer number : numbers) {
            stringBuilder.append(number).append(separator);
        }
        final int stringLength = stringBuilder.length();
        if (stringLength > 0) {
            stringBuilder.delete(stringLength - separator.length(), stringLength);
        }
        System.out.println(stringBuilder); // 1 : - 2 : - 3 : - 4 : - 5 : - 6 : - 7 : - 8 : - 9 : - 10


        // Stream API를 이용하여 코드간결하게 만들기.
        final String result = numbers.stream()
                                     .map(String::valueOf) // 타입을 다른타입으로 변경한다. String.valueOf(numbers)
                                     .collect(joining(" : - "));
                                        // "1", "2", "3", "4", ...
                                        // "1 : - ", "2 : - ", ...
        System.out.println(result);
    }
}
